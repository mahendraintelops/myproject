name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  GH_URL: https://github.com

jobs:
  build-and-test:
    runs-on: ubuntu-20.04
    permissions:
      packages: write
      id-token: write
      contents: read
      actions: read
      security-events: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.100

      - name: Restore Dependencies
        run: |
          cd UserService
          dotnet restore
          cd ..

      - name: Build
        run: |
          cd UserService
          dotnet build --configuration Release
          cd ..
      - name: Test
        run: |
          cd UserService 
          dotnet test
          cd ..

  build-and-push-container:
    needs: build-and-test
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build image and push to GitHub Container Registry
        uses: docker/build-push-action@v4
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./UserService
          # Note: tags has to be all lower-case
          tags: ${{ env.REGISTRY }}/${{ github.repository }}/userservice:${{ github.run_id }}
          # ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          # build on feature branches, push only on main branch
          push: true
      - name: Install cosign
        uses: sigstore/cosign-installer@main
      - name: Sign the images
        run: |
          cosign sign -y ${{ env.REGISTRY }}/${{ github.repository }}/userservice:${{ github.run_id }}
        env:
          COSIGN_EXPERIMENTAL: 1
      - name: Verify the pushed tags
        run: cosign verify ${{ env.REGISTRY }}/${{ github.repository }}/userservice:${{ github.run_id }} --certificate-identity ${{ env.GH_URL }}/${{ github.repository }}/.github/workflows/userservice-ci.yml@refs/heads/main --certificate-oidc-issuer https://token.actions.githubusercontent.com
        env:
          COSIGN_EXPERIMENTAL: 1
      - name: Run Trivy in GitHub SBOM mode and submit results to Dependency Graph
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'github'
          output: 'dependency-results.sbom.json'
          image-ref: '.'
          github-pat: ${{ secrets.GH_TOKEN }}
